pipeline {
    agent any

    options {
        timeout(time: 15, unit: 'MINUTES')
        disableConcurrentBuilds()
    }

    triggers {
        pollSCM('H/1 * * * *')
    }

    environment {
        DOCKER_IMAGE = 'tech-pocs/java-devops-app'
        DOCKER_TAG = "${BUILD_NUMBER}"
        WORKSPACE = "${env.WORKSPACE}/java/devops"
        KUBECONFIG_HOST = "${WORKSPACE}/../../k3s/kubeconfig.yaml"
        HELM_CHART_PATH = "${WORKSPACE}/helm/sample-app"
        OPENTOFU_DIR = "${WORKSPACE}/opentofu"
        INFRA_NAMESPACE = "infrastructure"
        APP_NAMESPACE = "applications"
    }

    stages {
        stage('Install Tools') {
            steps {
                sh '''
                set -e
                apt-get update
                apt-get install -y openjdk-21-jdk maven git docker.io wget unzip
                if ! command -v tofu >/dev/null; then
                  wget -O /tmp/opentofu.zip https://github.com/opentofu/opentofu/releases/download/v1.6.2/tofu_1.6.2_linux_amd64.zip
                  unzip /tmp/opentofu.zip -d /tmp
                  mv /tmp/tofu /usr/local/bin/tofu
                  chmod +x /usr/local/bin/tofu
                  rm /tmp/opentofu.zip
                fi
                if ! command -v yq >/dev/null; then
                  wget -O /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64
                  chmod +x /usr/bin/yq
                fi
                '''
            }
        }

        stage('Verify Jenkins Environment') {
            steps {
                echo "Running on Jenkins node: ${env.NODE_NAME}"
                sh 'hostname'
                sh 'java -version'
                sh 'mvn -version'
                sh 'git --version'
                sh 'docker --version'
                sh 'tofu version || true'
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Test & Build') {
            steps {
                echo "Running Maven tests"
                sh '''
                cd java/devops
                mvn clean test
                cd ${WORKSPACE}
                docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} -f Dockerfile .
                docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest
                '''
            }
        }

        stage('Provision Infra (OpenTofu)') {
            steps {
                sh '''
                if [ ! -f "${KUBECONFIG_HOST}" ]; then
                  echo "Kubeconfig not found at ${KUBECONFIG_HOST}!"
                  exit 1
                fi
                export KUBECONFIG="${KUBECONFIG_HOST}"
                cd ${OPENTOFU_DIR}
                tofu init
                tofu import kubernetes_namespace.infrastructure infrastructure || true
                tofu import kubernetes_namespace.applications applications || true
                tofu validate
                tofu plan -var="kubeconfig_path=${KUBECONFIG_HOST}" -out=tfplan
                tofu apply -auto-approve tfplan
                '''
            }
        }
    }

    post {
        always {
            echo "Build completed on Jenkins node: ${env.NODE_NAME}"
        }
        success {
            echo "Build and deployment succeeded!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
