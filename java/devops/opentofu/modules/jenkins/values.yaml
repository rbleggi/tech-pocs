# Jenkins Helm chart values

controller:
  # Jenkins controller configurations
  componentName: jenkins-controller
  
  # Jenkins plugins to install
  installPlugins:
    - kubernetes:3.12.0
    - workflow-aggregator:2.6
    - git:4.11.3
    - configuration-as-code:1.55
    - blueocean:1.25.5
    - pipeline-stage-view:2.24
    - pipeline-utility-steps:2.13.0
    - pipeline-model-definition:2.2114.v2654ca_721309
    - kubernetes-cli:1.10.3
    - job-dsl:1.81
    - helm:1.9
    - docker-workflow:1.28
    - docker-plugin:1.2.9
    - credentials-binding:523.vd859a_4b_122e6
    - ansicolor:1.0.2
  
  # Jenkins JCasC configuration
  JCasC:
    defaultConfig: true
    configScripts:
      jenkins-casc-configs: |
        jenkins:
          systemMessage: "Jenkins configured using CasC"
          numExecutors: 0
          scmCheckoutRetryCount: 2
          mode: NORMAL
          
        security:
          globalJobDslSecurityConfiguration:
            useScriptSecurity: false
          
        unclassified:
          location:
            url: http://jenkins.infrastructure.svc.cluster.local:8080/
          
        jobs:
          - script: >
              folder('pipelines') {
                displayName('CI/CD Pipelines')
                description('Pipelines for CI/CD')
              }
              
              pipelineJob('pipelines/example-pipeline') {
                definition {
                  cps {
                    script('''
                      pipeline {
                        agent {
                          kubernetes {
                            yaml '''
                            apiVersion: v1
                            kind: Pod
                            spec:
                              containers:
                              - name: maven
                                image: maven:3.8.6-openjdk-11
                                command:
                                - sleep
                                args:
                                - 99d
                                volumeMounts:
                                - name: m2
                                  mountPath: /root/.m2
                              volumes:
                              - name: m2
                                persistentVolumeClaim:
                                  claimName: maven-pvc
                            '''
                          }
                        }
                        
                        stages {
                          stage('Build') {
                            steps {
                              container('maven') {
                                sh 'mvn -B clean package'
                              }
                            }
                          }
                          
                          stage('Test') {
                            steps {
                              container('maven') {
                                sh 'mvn -B test'
                              }
                              junit '**/target/surefire-reports/TEST-*.xml'
                            }
                            post {
                              failure {
                                echo 'Tests failed! Pipeline will be marked as failed.'
                              }
                            }
                          }
                          
                          stage('Deploy') {
                            when {
                              expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
                            }
                            steps {
                              echo 'Deploying to Kubernetes...'
                              // Add deployment steps here
                            }
                          }
                        }
                      }
                    ''')
                    sandbox()
                  }
                }
              }

# Agent configurations
agent:
  enabled: true
  image: "jenkins/inbound-agent"
  tag: "4.11.2-4"
  resources:
    requests:
      cpu: "500m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# Persistence configurations
persistence:
  enabled: true
  storageClass: ""
  size: "8Gi"
  
# Service account configurations
serviceAccount:
  create: true
  annotations: {}
  
# RBAC configurations
rbac:
  create: true